@using GameTimelinePlanner.Shared.Domain.Entity

@if (Jobs != null && Duties != null && Players != null)
{
    <div class="settings-container">
        <div class="duty-selector">
            <InputSelect @bind-Value="DutyStr" @bind-Value:after="async () => await DutyChanged.InvokeAsync(Duty)" >
                @foreach (var duty in Duties)
                {
                    <option Value=@duty.Id>@duty.Abbr</option>
                }
            </InputSelect>
            @if ( Duty != null )
            {
                <DutyCard Duty="Duty"/>
            }
        </div>
        <RosterSettings Jobs="Jobs" @bind-Players="Players" @bind-Players:after="async () => await PlayersChanged.InvokeAsync(Players)" />
    </div>
}

@code
{
    [Parameter]
    public IList<Job>? Jobs { get; set; }

    [Parameter]
    public IList<Player>? Players { get; set; }

    [Parameter]
    public EventCallback<IList<Player>?> PlayersChanged { get; set; }

    [Parameter]
    public IList<Duty>? Duties { get; set; }
    
    [Parameter]
    public Duty? Duty { get; set; }

    [Parameter]
    public EventCallback<Duty> DutyChanged { get; set; }

    private string? DutyStr 
    { 
        get 
        { 
            return Duty?.Id; 
        }
        
        set 
        { 
            DutySet(value);
        } 
    }

    public void DutySet(string? id) {
        Duty = Duties!.FirstOrDefault(duty => duty.Id == id);
    }

}