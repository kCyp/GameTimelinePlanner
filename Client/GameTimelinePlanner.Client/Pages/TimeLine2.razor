@page "/timeline2"
@using GameTimelinePlanner.Client.Component.Timeline
@using GameTimelinePlanner.Client.Component.Timeline.Settings
@using GameTimelinePlanner.Shared.Domain.Entity;
@using GameTimelinePlanner.Client.Component;
@inject HttpClient Http

<PageTitle>Timeline builder</PageTitle>

<div class="timeline-container">
    <CascadingValue Value=@Orientation>
    @if (_jobs != null)
    {
        <button @onclick=ChangeOrientation style="width: 50px;"> ??? </button>

        <TimelineSettings Jobs="_jobs" Duties="_duties" 
            @bind-Players="_timeline.Roster.Players"
            @bind-Duty="_timeline.Duty" />
        <div class="timeline" data-orientation=@Orientation>
            <div class="boss-timeline">
            </div>

            @for (int i = 0; i < _timeline.Roster.Size; i++)
            {
                var player = _timeline.Roster.Players[i];
                if (player.Job != null)
                {
                    <TimelinePlayer @bind-Player="player" />
                }
            }
        </div>
    }
    </CascadingValue>
</div>


@code {
    private IList<Job>? _jobs { get; set; }
    private IList<Duty>? _duties { get; set; }

    private Timeline _timeline = new Timeline();
    
    private string Orientation { get; set; } = "vertical";

    private void ChangeOrientation() {
        Orientation = Orientation == "vertical" ? "horizontal" : "vertical";
    }

    protected override async Task OnInitializedAsync()
    {
        _jobs = await Http.GetFromJsonAsync<IList<Job>>("game/jobs");
        _duties = await Http.GetFromJsonAsync<IList<Duty>>("game/duties");
    }
}